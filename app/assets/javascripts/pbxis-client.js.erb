function pbx_connection(is_connected) {console.log("** Connection");console.log("Is Connected: " + is_connected);}
function pbx_agent_name(agent, name) {console.log("** Agent name");console.log("Agent: " + agent);console.log("Name: " + name);}
function pbx_phone_num(num) {console.log("** Phone Num");console.log("Num: " + num);}
function pbx_extension_status(agent, status) {
    $("td#ext-status").html(status);
}
function pbx_queue_count(queue, count) {
    $('[data-queue-count="' + queue + '""]').html(count);
}
function pbx_agent_status(agent, queue, status) {
    $('[data-queue-status="' + queue + '-' + agent + '"]').html(status);
    if(status == "loggedoff"){
        remove_queue_logoff_action(queue, agent);
    }else if(status == "loggedon"){
        add_queue_logoff_action(queue, agent);
    }
    toggle_logonoff_btn(queue);
}

function handle_event(e) {
    console.log("Handling event " + JSON.stringify(e));
    switch (e.type) {
    case "queueMemberStatus":
        pbx_agent_status(e.agent, e.queue, e.status);
        break;
    case "agentName":
        pbx_agent_name(e.agent, e.name);
        break;
    case "extensionStatus":
        pbx_extension_status(e.agent, e.status);
        break;
    case "queueCount":
        pbx_queue_count(e.queue, e.count);
        break;
    case "phoneNumber":
        pbx_phone_num(e.agent, e.number, e.name);
        break;
    case "closed":
        pbx_connection(false);
        return false;
    }
    return true;
}

function pbxis_connect(ticket) {
    var socket = new WebSocket('<%= "ws://#{Settings.pbxisws[:host]}:#{Settings.pbxisws[:port]}/" %>' + ticket + '<%= "/websocket" %>');
    socket.onopen = function() { pbx_connection(true); }
    socket.onclose = function() { console.log("Websocket closed");
                                  pbx_connection(false); }
    socket.onmessage = function(e) {
        if (!handle_event(JSON.parse(e.data))) socket.close();
    };
    socket.onerror = function (error) {
        console.log('WebSocket Error ' + error);
    };
}

function getCookie(c_name){
    var x,y,cookies=document.cookie.split(";");
    for (var i = 0; i < cookies.length; i++){
        name=cookies[i].substr(0,cookies[i].indexOf("="));
        value=cookies[i].substr(cookies[i].indexOf("=")+1);
        name=name.replace(/^\s+|\s+$/g,"");
        if (name==c_name){
            return unescape(value);
        }
    }
}

$(document).ready(function(){
    pbxis_connect(getCookie("pbxis_ticket"));
});
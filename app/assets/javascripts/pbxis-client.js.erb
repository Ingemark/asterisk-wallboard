function pbx_connection(is_connected) {console.log("** Connection");console.log("Is Connected: " + is_connected);}
function pbx_agent_name(agent, name) {console.log("** Agent name");console.log("Agent: " + agent);console.log("Name: " + name);}

function pbx_phone_num(agent, num, name) {
    if(num != null){
        $('table#active-call-status td[data-property="number"]').html(num);
            $("table#active-call-status").fadeIn("fast");
        if(name != null){
            $('table#active-call-status td[data-property="name"]').html(name);
        }
    }else{
        $('table#active-call-status td[data-property="number"]').html("N/A");
        $('table#active-call-status td[data-property="name"]').html("N/A");
        $("table#active-call-status").fadeOut("fast");
    }
}

function pbx_extension_status(agent, status) {
    $('[data-ext-status="' + agent + '"]').html(status);
}

function pbx_queue_count(queue, count) {
    var $queueCount = $('table.queue-status[data-queue="' + queue + '"] td[data-property="queue-count"]');
    if($queueCount.length == 0)
        $queueCount = $('table#queue-statuses tr[data-queue="' + queue + '"] td[data-property="queue-count"]');
    
    $queueCount.change_and_highlight(count, {});
}

function pbx_agent_status(agent, queue, status) {
    // Update agent status
    $('table.agents-status[data-queue="' + queue + '"] tr[data-agent="' + agent + '"] td[data-property="status"]').change_and_highlight(status, {});
    $('table#queue-statuses tr[data-queue="' + queue + '"] td[data-agent="' + agent + '"][data-property="status"]').change_and_highlight(status, {});
    
    if(status == "loggedoff"){
        // Toggle logon/off action on
        toggle_action_item(queue, agent, 'logonoff', 'on');
        
        // Disable pause action
        toggle_action_item(queue, agent, 'pause', 'on');
        $('li[data-action="pause"][data-queue="' + queue + '"][data-agent="' + agent + '"]').addClass("disabled");
        
        // Disable logoff action
        $('table.agents-status li[data-action="logoff"][data-queue="' + queue + '"][data-agent="' + agent + '"]').addClass("disabled");
        
        // Hide agent status
        hide_agent_status(queue, agent);
    }else if(status == "loggedon"){
        // Toggle logon/off action off
        toggle_action_item(queue, agent, 'logonoff', 'off');
        
        // Enable pause action
        toggle_action_item(queue, agent, 'pause', 'on');
        $('li[data-action="pause"][data-queue="' + queue + '"][data-agent="' + agent + '"]').removeClass("disabled");
        
        // Enable logoff action
        $('table.agents-status li[data-action="logoff"][data-queue="' + queue + '"][data-agent="' + agent + '"]').removeClass("disabled");
        
        // Show agent status
        show_agent_status(queue, agent);
    }else if(status == "paused"){
        toggle_action_item(queue, agent, 'pause', 'off');
    }
}

function handle_event(e) {
    console.log("Handling event " + JSON.stringify(e));
    switch (e.type) {
    case "queueMemberStatus":
        pbx_agent_status(e.agent, e.queue, e.status);
        break;
    case "agentName":
        pbx_agent_name(e.agent, e.name);
        break;
    case "extensionStatus":
        pbx_extension_status(e.agent, e.status);
        break;
    case "queueCount":
        pbx_queue_count(e.queue, e.count);
        break;
    case "phoneNumber":
        pbx_phone_num(e.agent, e.number, e.name);
        break;
    case "closed":
        pbx_connection(false);
        return false;
    }
    return true;
}

function pbxis_connect(ticket) {
    var socket = new WebSocket('<%= "ws://#{Settings.pbxisws[:host]}:#{Settings.pbxisws[:port]}/" %>' + ticket + '<%= "/websocket" %>');
    socket.onopen = function() { pbx_connection(true); }
    socket.onclose = function() { console.log("Websocket closed");
                                  pbx_connection(false); }
    socket.onmessage = function(e) {
        if (!handle_event(JSON.parse(e.data))) socket.close();
    };
    socket.onerror = function (error) {
        console.log('WebSocket Error ' + error);
    };
}